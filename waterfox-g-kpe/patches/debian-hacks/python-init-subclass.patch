--- a/third_party/python/glean_parser/glean_parser/metrics.py
+++ b/third_party/python/glean_parser/glean_parser/metrics.py
@@ -9,6 +9,7 @@ Classes for each of the high-level metri
 """
 
 import enum
+import sys
 from typing import Any, Dict, List, Optional, Type, Union  # noqa
 
 
@@ -16,6 +17,15 @@ from . import pings
 from . import util
 
 
+# Import a backport of PEP487 to support __init_subclass__
+if sys.version_info < (3, 6):
+    import pep487  # type: ignore
+
+    base_object = pep487.PEP487Object  # type: ignore
+else:
+    base_object = object
+
+
 # Important: if the values are ever changing here, make sure
 # to also fix mozilla/glean. Otherwise language bindings may
 # break there.
@@ -32,7 +42,7 @@ class DataSensitivity(enum.Enum):
     highly_sensitive = 4
 
 
-class Metric:
+class Metric(base_object):
     typename = "ERROR"
     glean_internal_metric_cat = "glean.internal.metrics"
     metric_types = {}
--- a/third_party/python/glean_parser/glean_parser/pings.py
+++ b/third_party/python/glean_parser/glean_parser/pings.py
@@ -8,16 +8,26 @@
 Classes for managing the description of pings.
 """
 
+import sys
 from typing import Dict, List, Optional
 
 
 from . import util
 
 
+# Import a backport of PEP487 to support __init_subclass__
+if sys.version_info < (3, 6):
+    import pep487  # type: ignore
+
+    base_object = pep487.PEP487Object  # type: ignore
+else:
+    base_object = object
+
+
 RESERVED_PING_NAMES = ["baseline", "metrics", "events", "deletion-request"]
 
 
-class Ping:
+class Ping(base_object):
     def __init__(
         self,
         name: str,

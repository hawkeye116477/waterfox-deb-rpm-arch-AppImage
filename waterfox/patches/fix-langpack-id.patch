diff --git a/browser/components/preferences/tests/browser_browser_languages_subdialog.js b/browser/components/preferences/tests/browser_browser_languages_subdialog.js
index 49853d95af640..66888ce6b7489 100644
--- a/browser/components/preferences/tests/browser_browser_languages_subdialog.js
+++ b/browser/components/preferences/tests/browser_browser_languages_subdialog.js
@@ -15,7 +15,7 @@ const DICTIONARY_ID_PL = "pl@dictionaries.addons.mozilla.org";
 const TELEMETRY_CATEGORY = "intl.ui.browserLanguage";
 
 function langpackId(locale) {
-  return `langpack-${locale}@firefox.mozilla.org`;
+  return `langpack-${locale}@l10n.waterfox.net`;
 }
 
 function getManifestData(locale, version = "2.0") {
@@ -726,7 +726,7 @@ add_task(async function testInstallFromAMO() {
   is(getMainPaneLocales(), "en-US,pl,search", "en-US and pl now available");
 
   // Disable the Polish langpack.
-  langpack = await AddonManager.getAddonByID("langpack-pl@firefox.mozilla.org");
+  langpack = await AddonManager.getAddonByID("langpack-pl@l10n.waterfox.net");
   await langpack.disable();
 
   ({ dialogDoc, available, selected } = await openDialog(doc, true));
diff --git a/browser/locales/Makefile.in b/browser/locales/Makefile.in
index 2f6a2c9be2e93..787033888670e 100644
--- a/browser/locales/Makefile.in
+++ b/browser/locales/Makefile.in
@@ -19,9 +19,9 @@ PWD := $(CURDIR)
 ZIP_IN ?= $(ABS_DIST)/$(PACKAGE)
 
 ifdef MOZ_DEV_EDITION
-MOZ_LANGPACK_EID=langpack-$(AB_CD)@devedition.mozilla.org
+MOZ_LANGPACK_EID=langpack-$(AB_CD)@l10n.waterfox.net
 else
-MOZ_LANGPACK_EID=langpack-$(AB_CD)@firefox.mozilla.org
+MOZ_LANGPACK_EID=langpack-$(AB_CD)@l10n.waterfox.net
 endif
 
 # Required for l10n.mk - defines a list of app sub dirs that should
diff --git a/intl/locale/LangPackMatcher.sys.mjs b/intl/locale/LangPackMatcher.sys.mjs
index 2310107c7f9e5..58f375a7ea4ff 100644
--- a/intl/locale/LangPackMatcher.sys.mjs
+++ b/intl/locale/LangPackMatcher.sys.mjs
@@ -374,7 +374,7 @@ async function getAvailableLocales() {
   // If defaultLocale isn't lastFallbackLocale, then we still need the langpack
   // for lastFallbackLocale for it to be useful.
   if (defaultLocale != lastFallbackLocale) {
-    let lastFallbackId = `langpack-${lastFallbackLocale}@firefox.mozilla.org`;
+    let lastFallbackId = `langpack-${lastFallbackLocale}@l10n.waterfox.net`;
     let lastFallbackInstalled =
       await lazy.AddonManager.getAddonByID(lastFallbackId);
     if (!lastFallbackInstalled) {
diff --git a/intl/locale/tests/LangPackMatcherTestUtils.sys.mjs b/intl/locale/tests/LangPackMatcherTestUtils.sys.mjs
index e746d558bdd80..34d80f94d4af6 100644
--- a/intl/locale/tests/LangPackMatcherTestUtils.sys.mjs
+++ b/intl/locale/tests/LangPackMatcherTestUtils.sys.mjs
@@ -38,7 +38,7 @@ export function getAddonAndLocalAPIsMocker(testScope, sandbox) {
         );
         resolve(
           availableLangpacks.map(locale => ({
-            guid: `langpack-${locale}@firefox.mozilla.org`,
+            guid: `langpack-${locale}@l10n.waterfox.net`,
             type: "language",
             hash: locale,
             target_locale: locale,
